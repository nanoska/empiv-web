name: Deploy to Heroku

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python manage.py test

    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME_PROD }}
      run: |
        if ! git remote | grep heroku; then git remote add heroku https://git.heroku.com/${{ env.HEROKU_APP_NAME }}.git; fi
        echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com
        docker build -t registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web .
        docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
        heroku container:release web --app ${{ env.HEROKU_APP_NAME }}

    - name: Deploy to Testing
      if: github.ref == 'refs/heads/dev'
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME_TEST }}
      run: |
        if ! git remote | grep heroku; then git remote add heroku https://git.heroku.com/${{ env.HEROKU_APP_NAME }}.git; fi
        echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com
        docker build -t registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web .
        docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
        heroku container:release web --app ${{ env.HEROKU_APP_NAME }}
